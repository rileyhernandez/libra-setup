#!/bin/bash
set -e

BIG_BROTHER_INSTALL_PATH="/usr/local/bin/big-brother"
SYNC_INSTALL_PATH="/usr/local/bin/sync"
SERVICE_USER="libra"
DATA_DIR="/var/lib/libra"
ENV_DIR="/etc/libra"
ENV_FILE="$ENV_DIR/.env"

case "$1" in
    configure)

        # Create a system user for the service to run as
        if ! getent passwd "$SERVICE_USER" >/dev/null; then
            echo "Creating system user '$SERVICE_USER'..."
            adduser --system --no-create-home --group "$SERVICE_USER"
        fi

        # Create the data directory and set ownership
        echo "Creating data directory $DATA_DIR..."
        mkdir -p "$DATA_DIR"
        chown -R "$SERVICE_USER":"$SERVICE_USER" "$DATA_DIR"

        # Create the environment directory and file
        echo "Creating environment directory $ENV_DIR..."
        mkdir -p "$ENV_DIR"

        # Create the .env file if it doesn't exist
        if [ ! -f "$ENV_FILE" ]; then
            echo "Creating environment file $ENV_FILE..."
            touch "$ENV_FILE"
        fi

        # Set proper ownership and permissions for the environment file
        chown "$SERVICE_USER":"$SERVICE_USER" "$ENV_FILE"
        chmod 600 "$ENV_FILE"  # Only readable by owner

        # Make the binaries executable
        echo "Setting permissions for $BIG_BROTHER_INSTALL_PATH, $SYNC_INSTALL_PATH..."
        chmod +x "$BIG_BROTHER_INSTALL_PATH"
        chmod +x "$SYNC_INSTALL_PATH"

        # Reload udev rules to apply the new rule file
        echo "Reloading udev rules..."
        udevadm control --reload-rules
        udevadm trigger

        # Reload systemd daemon, enable and start the new service
        if [ -d /run/systemd/system ]; then
            echo "Enabling and starting libra service..."
            systemctl daemon-reload

            systemctl enable libra.service
            systemctl start libra.service

            systemctl enable sync.service
            systemctl start sync.service
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0